syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "api/general/v1/demo.proto";

option go_package = "github.com/gatepoint/gatepoint/api/gatepoint/v1";

service Demo {
  rpc Demo(project.api.general.v1.DemoRequest) returns (project.api.general.v1.DemoResponse) {
    option (google.api.http) = {
      get: "/api/v1/demo"
    };
  }

  rpc Token(google.protobuf.Empty) returns (project.api.general.v1.TokenResponse) {
    option (google.api.http) = {
      get: "/api/v1/token"
    };
  }
}

service Global {
  rpc InitCluster(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v1/init"
      body: "*"
    };
  }
}

service GatewayAPI {
  rpc CreateGatewayClass(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v1/gatewayclasses/name"
      body: "*"
    };
  }

  rpc DeleteGatewayClass(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/gatewayclasses/name"
    };
  }

  rpc UpdateGatewayClass(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/api/v1/gatewayclasses/name"
      body: "*"
    };
  }

  rpc GetGatewayClass(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      get: "/api/v1/gatewayclasses/name"
    };
  }

  rpc ListGatewayClass(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      get: "/api/v1/gatewayclasses"
    };
  }

  rpc CreateGateway(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v1/gateways/name"
      body: "*"
    };
  }

  rpc DeleteGateway(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/gateways/name"
    };
  }

  rpc UpdateGateway(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/api/v1/gateways/name"
      body: "*"
    };
  }

  rpc GetGateway(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      get: "/api/v1/gateways/name"
    };
  }

  rpc ListGateway(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      get: "/api/v1/gateways"
    };
  }
}
